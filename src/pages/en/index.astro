---
import { IndexPage } from "@/layouts/IndexPage";
import Main from "@/layouts/main.astro";
import profileImg from "public/profile.png";
import CarImage from "public/projects/car.png";
import LoomImage from "public/projects/loom.webp";
import WyroTechImage from "public/projects/wyrotech.png";
import acpImg from "public/screenshots/acp.png";
import connectaImg from "public/screenshots/connacta-regensburg.png";
import courseraImg from "public/screenshots/coursera.png";
import dabImg from "public/screenshots/dab.png";
import edvschuleImg from "public/screenshots/edvschule.png";
import firstcontactImg from "public/screenshots/firstcontact-deggendorf.png";
import LoadingScreen from "../../components/LoadingScreen.astro";
import { getLogo, processImage } from "../../lib/helper";
import type { LandingPageObject, Project } from "../../lib/models";

Astro.response.headers.set(
	"Cache-Control",
	"s-maxage=360, stale-while-revalidate",
);
Astro.response.headers.set("Vercel-CDN-Cache-Control", "max-age=3600");
Astro.response.headers.set("CDN-Cache-Control", "max-age=60");
export const prerender = true;

const [
	logo,
	logoSmall,
	profileUrl,
	firstcontact,
	dab,
	coursera,
	connecta,
	edvschule,
	acp,
	wyrotech,
	car,
	loom,
] = await Promise.all([
	getLogo(),
	getLogo(42),
	processImage(profileImg, 300),
	processImage(firstcontactImg, 200),
	processImage(dabImg, 200),
	processImage(courseraImg, 200),
	processImage(connectaImg, 200),
	processImage(edvschuleImg, 200),
	processImage(acpImg, 200),
	processImage(WyroTechImage, 400),
	processImage(CarImage, 400),
	processImage(LoomImage, 400),
]);

const obj: LandingPageObject = {
	logo,
	logoSmall,
	profileUrl,
	timelineImages: {
		firstcontact,
		dab,
		coursera,
		connecta,
		edvschule,
		acp,
	},
	projects: [
		{
			title: "WyroTech",
			description:
				"A personal portfolio website built with modern web technologies to showcase projects, skills, and professional experience.",
			tag: "Website",
			image: wyrotech,
			link: "https://github.com/WyroTech/wyrotech",
			tech: ["react", "astro", "tailwindcss", "vercel"],
		} as Project,
		{
			title: "RoboCar 4.0",
			description:
				"Control a smart robot car via ESP32 and Python backend using WebSockets and JSON communication between ESP32 and Arduino.",
			tag: "Robotic",
			link: "https://github.com/WyroTech/RoboCar",
			tech: ["cplusplus", "python", "javascript"],
			image: car,
		},
		{
			title: "dab Nexus Loom",
			description:
				"The ultimate SAP data analytics solution using Microsoft Fabric for seamless integration and advanced insights.",
			tag: "Business-Analytic Platform",
			link: "https://www.dab-europe.com/en/products/dab-nexus-loom/",
			image: loom,
			tech: ["angular", "docker", "dotnet"],
		},
	].reverse(),
};
---

<Main>
    <link slot="head" rel="prefetch" fetchpriority="high" as="image" type="image/webp" href={obj.logo} />
    <link slot="head" rel="prefetch" fetchpriority="high" as="image" type="image/webp" href={obj.profileUrl} />

    <IndexPage client:only="react" obj={obj}/>
    <LoadingScreen logoUrl={obj.logo}/>
</Main>