---
import { LandingHeader } from "@/layouts/LandingHeader";
import { ProgrammingLanguages } from "@/layouts/ProgrammingLanguages";
import { SpeakingLanguages } from "@/layouts/SpeakingLanguages";
import { Stats } from "@/layouts/Stats";
import { WorkTimeline } from "@/layouts/WorkTimeline";
import Main from "@/layouts/main.astro";

import { getImage } from "astro:assets";
import profileImg from "public/profile.png";
import acpImg from "public/screenshots/acp.png";
import connectaImg from "public/screenshots/connacta-regensburg.png";
import courseraImg from "public/screenshots/coursera.png";
import dabImg from "public/screenshots/dab.png";
import edvschuleImg from "public/screenshots/edvschule.png";
import firstcontactImg from "public/screenshots/firstcontact-deggendorf.png";
import Projects from "../../layouts/projects.astro";

// Process images with Astro's image optimization
const processImages = async (img, width = 200) => {
	return (
		await getImage({
			src: img,
			width: width,
			format: "webp",
		})
	).src;
};

const images = {
	firstcontact: await processImages(firstcontactImg),
	dab: await processImages(dabImg),
	coursera: await processImages(courseraImg),
	connecta: await processImages(connectaImg),
	edvschule: await processImages(edvschuleImg),
	acp: await processImages(acpImg),
};

const profile = await processImages(profileImg, 500);
---
<Main hasNav={true}>
    <LandingHeader client:only="react" imageUrl={profile}/>
    <ProgrammingLanguages client:only="react"/>
    <SpeakingLanguages client:only="react"/>
    <Stats client:only="react"/>
    <Projects/>
    <WorkTimeline client:only="react" images={images}/>
</Main>
<script>
    const body = document.getElementById("body")!;
    const loadingDiv = document.getElementById("loading-screen")!;

    body.classList.add("main-loading");

    let loadedComponents = 0;

    (document as any).finishedLoadingComponent = () => {
        loadedComponents++;
        if (loadedComponents === 6) {
            body.classList.remove("main-loading");
            setTimeout(() =>loadingDiv.classList.add("opacity-0"), 300);
            setTimeout(() => loadingDiv.remove(), 1300);
        }
    };
</script>
